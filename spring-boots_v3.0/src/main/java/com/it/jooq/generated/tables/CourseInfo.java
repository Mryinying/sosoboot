/**
 * This class is generated by jOOQ
 */
package com.it.jooq.generated.tables;


import com.it.jooq.generated.Keys;
import com.it.jooq.generated.Test;
import com.it.jooq.generated.tables.records.CourseInfoRecord;

import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CourseInfo extends TableImpl<CourseInfoRecord> {

    private static final long serialVersionUID = -87609385;

    /**
     * The reference instance of <code>test.course_info</code>
     */
    public static final CourseInfo COURSE_INFO = new CourseInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CourseInfoRecord> getRecordType() {
        return CourseInfoRecord.class;
    }

    /**
     * The column <code>test.course_info.id</code>.
     */
    public final TableField<CourseInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.course_info.course_name</code>.
     */
    public final TableField<CourseInfoRecord, String> COURSE_NAME = createField("course_name", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>test.course_info.teacher_no</code>.
     */
    public final TableField<CourseInfoRecord, Integer> TEACHER_NO = createField("teacher_no", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.course_info.weekday</code>.
     */
    public final TableField<CourseInfoRecord, String> WEEKDAY = createField("weekday", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>test.course_info.start_time</code>.
     */
    public final TableField<CourseInfoRecord, Date> START_TIME = createField("start_time", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>test.course_info.end_time</code>.
     */
    public final TableField<CourseInfoRecord, Date> END_TIME = createField("end_time", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>test.course_info.classroom</code>.
     */
    public final TableField<CourseInfoRecord, String> CLASSROOM = createField("classroom", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * Create a <code>test.course_info</code> table reference
     */
    public CourseInfo() {
        this("course_info", null);
    }

    /**
     * Create an aliased <code>test.course_info</code> table reference
     */
    public CourseInfo(String alias) {
        this(alias, COURSE_INFO);
    }

    private CourseInfo(String alias, Table<CourseInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private CourseInfo(String alias, Table<CourseInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<CourseInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_COURSE_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CourseInfoRecord> getPrimaryKey() {
        return Keys.KEY_COURSE_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CourseInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<CourseInfoRecord>>asList(Keys.KEY_COURSE_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CourseInfo as(String alias) {
        return new CourseInfo(alias, this);
    }

    /**
     * Rename this table
     */
    public CourseInfo rename(String name) {
        return new CourseInfo(name, null);
    }
}
