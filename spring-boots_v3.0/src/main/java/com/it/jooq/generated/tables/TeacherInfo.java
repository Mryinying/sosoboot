/**
 * This class is generated by jOOQ
 */
package com.it.jooq.generated.tables;


import com.it.jooq.generated.Keys;
import com.it.jooq.generated.Test;
import com.it.jooq.generated.tables.records.TeacherInfoRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeacherInfo extends TableImpl<TeacherInfoRecord> {

    private static final long serialVersionUID = -1941232564;

    /**
     * The reference instance of <code>test.teacher_info</code>
     */
    public static final TeacherInfo TEACHER_INFO = new TeacherInfo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TeacherInfoRecord> getRecordType() {
        return TeacherInfoRecord.class;
    }

    /**
     * The column <code>test.teacher_info.id</code>.
     */
    public final TableField<TeacherInfoRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>test.teacher_info.tea_name</code>.
     */
    public final TableField<TeacherInfoRecord, String> TEA_NAME = createField("tea_name", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>test.teacher_info.tea_sex</code>.
     */
    public final TableField<TeacherInfoRecord, Integer> TEA_SEX = createField("tea_sex", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>test.teacher_info.tea_nation</code>.
     */
    public final TableField<TeacherInfoRecord, String> TEA_NATION = createField("tea_nation", org.jooq.impl.SQLDataType.VARCHAR.length(10), this, "");

    /**
     * The column <code>test.teacher_info.password</code>.
     */
    public final TableField<TeacherInfoRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(18).nullable(false), this, "");

    /**
     * Create a <code>test.teacher_info</code> table reference
     */
    public TeacherInfo() {
        this("teacher_info", null);
    }

    /**
     * Create an aliased <code>test.teacher_info</code> table reference
     */
    public TeacherInfo(String alias) {
        this(alias, TEACHER_INFO);
    }

    private TeacherInfo(String alias, Table<TeacherInfoRecord> aliased) {
        this(alias, aliased, null);
    }

    private TeacherInfo(String alias, Table<TeacherInfoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Test.TEST;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<TeacherInfoRecord, Integer> getIdentity() {
        return Keys.IDENTITY_TEACHER_INFO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TeacherInfoRecord> getPrimaryKey() {
        return Keys.KEY_TEACHER_INFO_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TeacherInfoRecord>> getKeys() {
        return Arrays.<UniqueKey<TeacherInfoRecord>>asList(Keys.KEY_TEACHER_INFO_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TeacherInfo as(String alias) {
        return new TeacherInfo(alias, this);
    }

    /**
     * Rename this table
     */
    public TeacherInfo rename(String name) {
        return new TeacherInfo(name, null);
    }
}
